# Backup of the serverless cli configuration
service: 'scoutradioz-voyager'

frameworkVersion: "3"

plugins:
  - '@silvermine/serverless-plugin-cloudfront-lambda-edge'
  - serverless-s3-deploy

provider:
  name: aws
  runtime: nodejs18.x
  # lambdaHashingVersion: 20201221 (not necessary b/c 20201221 is used by default)
  region: us-east-1 #Lambda@Edge must be deployed in us-east-1
  stage: ${opt:stage, 'dev'}
  stackName: ScoutradiozVoyagerStack

package:
  individually: true
  patterns:
    - '!./**'
    - build/server/**
    - build/edge/**

custom:
  assets:
    auto: true
    targets:
      - bucket: 
          Ref: StaticAssets
        files:
          - source: ./build/assets/
            globs: 
              - '**'
            empty: true
            headers:
              CacheControl: max-age=31104000
          - source: ./build/prerendered/
            globs: 
              - '**'
            empty: true
            headers:
              CacheControl: max-age=60


functions:
  #SSR Function
  svelte:
    runtime: nodejs18.x
    name: ${self:provider.stackName}-SvelteFunction
    reservedConcurrency: 5
    handler: build/server/serverless.handler
    memorySize: 256
    timeout: 15
    url: true
    environment: &lambdaEnvVariables
      TIER: test # should be updated somewhere else in code somehow later 
      UTILITIES_DEBUG: 'false'

  # JL note: When updating function code, make sure to adjust the version in the Lambda@Edge ARN in the cloudfront formation
  #Router Function
  cfLambda:
    runtime: nodejs18.x
    name: ${self:provider.stackName}-EdgeRouterFunction
    handler: build/edge/router.handler
    memorySize: 128
    timeout: 1
    lambdaAtEdge:
      distribution: 'WebsiteDistribution'
      eventType: origin-request

resources:
  Resources:
    StaticAssets:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:provider.stage}-${self:service}-static-assets

    StaticAssetsS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticAssets
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource:
                Fn::Join: ["", ["arn:aws:s3:::", { "Ref": "StaticAssets" }, "/*"]]

    WebsiteDistribution:
      Type: 'AWS::CloudFront::Distribution'
      Properties:
        DistributionConfig:
          Origins:
            -
              DomainName: !Select [2, !Split ["/", !GetAtt ["SvelteLambdaFunctionUrl", "FunctionUrl"]]]
              Id: default
              OriginCustomHeaders: 
                #Lambda@edge does not support ENV vars, so instead we have to pass in a customHeaders.
                -
                  HeaderName: 's3-host'
                  HeaderValue: '${self:provider.stage}-${self:service}-static-assets.s3.amazonaws.com'
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: 'https-only'
          Enabled: true
          Comment: '${self:service}_${self:provider.stage}'
          DefaultCacheBehavior:
            TargetOriginId: default
            Compress: true
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            CachedMethods:
              - GET
              - HEAD
              - OPTIONS
            ForwardedValues:
              Cookies:
                Forward: all
              QueryString: True
            ViewerProtocolPolicy: 'redirect-to-https'